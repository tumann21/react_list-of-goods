{"version":3,"sources":["ListOfGoods.tsx","App.tsx","index.tsx"],"names":["ListOfGoods","goods","className","map","good","goodsFromServer","App","state","confirmBtn","isReversed","sortBy","selectedOption","reversed","setState","sortAlphabetically","reset","sortByLength","handleChange","e","this","copyListOfGoods","filter","item","length","sort","g1","g2","localeCompare","reverse","type","onClick","value","onChange","target","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"8QAOaA,EAA+B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7C,OACE,qBAAKC,UAAU,YAAf,SACE,6BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,WCRbC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJC,MAAQ,CACNN,MAAOI,EACPG,YAAY,EACZC,YAAY,EACZC,OAAQ,GACRC,eAAgB,G,EAGlBC,SAAW,WACT,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gB,EAIvBK,mBAAqB,WACnB,EAAKD,SAAS,CAAEH,OAAQ,W,EAG1BK,MAAQ,WACN,EAAKF,SAAS,CACZF,eAAgB,EAChBF,YAAY,EACZC,OAAQ,M,EAIZM,aAAe,WACb,EAAKH,SAAS,CAAEH,OAAQ,Y,EAG1BO,aAAe,SAACC,GACd,EAAKL,UAAS,iBAAO,CAAEF,gBAAiBO,O,4CAG1C,WAAU,IAAD,OACP,EAMIC,KAAKZ,MALPN,EADF,EACEA,MACAO,EAFF,EAEEA,WACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,eAGIS,EACF,YAAInB,GAAOoB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUZ,KAiB7C,OAfAS,EAAgBI,MAAK,SAACC,EAAIC,GACxB,OAAQhB,GACN,IAAK,QACH,OAAOe,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGF,OAASG,EAAGH,OACxB,QACE,OAAO,MAITd,GACFW,EAAgBQ,UAIhB,sBAAK1B,UAAU,MAAf,UACE,uCACA,sBAAKA,UAAU,iBAAf,UACGM,GAEG,wBACEqB,KAAK,SACL3B,UAAU,SACV4B,QAAS,kBAAM,EAAKjB,UAAS,SAAAN,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAH9D,oBAQFA,GAEE,wBACEqB,KAAK,SACL3B,UAAU,SACV4B,QAASX,KAAKP,SAHhB,qBAQJ,wBACEiB,KAAK,SACL3B,UAAU,SACV4B,QAASX,KAAKL,mBAHhB,sBAOA,wBACEe,KAAK,SACL3B,UAAU,SACV4B,QAASX,KAAKJ,MAHhB,mBAOA,wBACEc,KAAK,SACL3B,UAAU,SACV4B,QAASX,KAAKH,aAHhB,4BAOA,yBACEd,UAAU,SACV6B,MAAOpB,EACPqB,SAAU,SAACd,GAAD,OAAO,EAAKD,aAAaC,EAAEe,OAAOF,QAH9C,UAKE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,uBAGFvB,GAAc,cAAC,EAAD,CAAaP,MAAOmB,W,GA5H1Bc,IAAMC,eAkIT7B,ICxJf8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bcaa89f4.chunk.js","sourcesContent":["import React from 'react';\nimport './ListOfGoods.css';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => {\n  return (\n    <div className=\"item-list\">\n      <ul>\n        {goods.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ListOfGoods;\n","import React from 'react';\nimport './App.css';\nimport { ListOfGoods } from './ListOfGoods';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {\n  goods: string[],\n  confirmBtn: boolean,\n  isReversed: boolean,\n  sortBy: string,\n  selectedOption: number,\n};\n\nclass App extends React.PureComponent<{}, Props> {\n  state = {\n    goods: goodsFromServer,\n    confirmBtn: true,\n    isReversed: false,\n    sortBy: '',\n    selectedOption: 1,\n  };\n\n  reversed = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: 'alpha' });\n  };\n\n  reset = () => {\n    this.setState({\n      selectedOption: 1,\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  handleChange = (e: string) => {\n    this.setState(() => ({ selectedOption: +e }));\n  };\n\n  render() {\n    const {\n      goods,\n      confirmBtn,\n      isReversed,\n      sortBy,\n      selectedOption,\n    } = this.state;\n\n    const copyListOfGoods\n      = [...goods].filter(item => item.length >= selectedOption);\n\n    copyListOfGoods.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'alpha':\n          return g1.localeCompare(g2);\n        case 'length':\n          return g1.length - g2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyListOfGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <div className=\"button-section\">\n          {confirmBtn\n            && (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => this.setState(state => ({ confirmBtn: !state.confirmBtn }))}\n              >\n                Start\n              </button>\n            )}\n          {!confirmBtn\n            && (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={this.reversed}\n              >\n                Reverse\n              </button>\n            )}\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.sortAlphabetically}\n          >\n            Sort A-Z\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n          <select\n            className=\"button\"\n            value={selectedOption}\n            onChange={(e) => this.handleChange(e.target.value)}\n          >\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n        {!confirmBtn && <ListOfGoods goods={copyListOfGoods} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}